@import "./scss/base";
$sidebar-width-min: 250px;
$sidebar-width: 22vw;
$number-of-channels: 3;
.loading-dialogue {
  position: fixed;
  top: 20%;
  left: 50%;
  /* bring your own prefixes */
  transform: translate(-50%, -20%);
  text-align: left;
  .logo-container {
    text-align: center;
    overflow-x: hidden;
    position: relative;
    transition: 600ms ease-in-out width;
    .logo {
      height: 50px;
    }
  }
  .inner {
    text-align: center;
  }
}

.hover-menu {
  .hover-label {
    display: none;

    &.always-show {
      display: block;
    }
  }
}

@media (max-height: 900px) {
  .hide-low-height {
    display: none;
  }

  .item {
    font-size: 0.92em;
  }

  .hover-menu {
    .btn {
      padding-top: 0.1em;
      padding-bottom: 0.1em;
      font-size: 0.75em;
    }

    .hover-label {
      font-size: 11px;
      margin-top: -4px;
      display: block;
      width: 100%;
    }

    &:not(:hover) {
      overflow: hidden;
      height: 15px;

      > *:not(.hover-label) {
        display: none !important;
      }
    }
  }
}

.sp {
  display: grid;
  grid-template-areas: "channels sb-tg sb";
  grid-template-columns: 1fr auto auto;
  grid-template-rows: 100%;
  overflow: hidden;
  background: var(--background);
  flex-grow: 1;
  .channels {
    display: grid;
    grid-area: channels;
    grid-template-columns: repeat($number-of-channels, 1fr);
    grid-template-rows: 100%;
    grid-gap: 10px;
    padding: 10px;

    .channel-vu {
      height: 40px;
      text-align: center;
      background: black;
      span {
        font-size: 0.7em;
      }
      canvas {
        max-width: 100%;
        border-left: 1px solid gray;
        border-right: 1px solid gray;
      }
    }
  }
  #sidebar {
    grid-area: sb;
    display: flex;
    flex-direction: column;
    height: 100%;
    min-width: $sidebar-width-min;
    width: $sidebar-width;
    transition: all 0.3s;
    &.hidden {
      margin-right: -$sidebar-width * 2; // couldn't do a calc of the min and max.
    }
    .library-column {
      flex-grow: 1;
      min-height: 0;
      background: var(--sidebar-background);
      display: flex;
      flex-direction: column;
    }
    .mic-control {
      background: var(--sidebar-background);
      position: relative;
      .toggle {
        cursor: pointer;
        position: absolute;
        right: 1em;
        top: 0.2em;
      }
    }
  }
  #sidebar-toggle {
    grid-area: sb-tg;
    writing-mode: vertical-rl;
    height: 100%;
  }
  .fa-spin {
    animation: fa-spin 2s infinite linear;
  }
  @keyframes fa-spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(359deg);
    }
  }
}

#uploadIframe {
  width: 100%;
  max-height: 600px;
  height: 60vh;
  box-sizing: content-box;
}

#importerIframe {
  width: 100%;
  height: 100%;
  box-sizing: content-box;
}

.sp-mic-live {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9000;
  pointer-events: none;
  box-shadow: inset 0 0 3px 6px red;
}

#micLiveTimer {
  background: black;
  border: 3px solid white;
  color: white;
  font-weight: bold;
  padding: 2px;
  width: 100%;
  display: inline-block;
  text-align: center;

  padding: 0;

  .text {
    margin: 0;
    float: left;
    padding: 0 10px;
    border-right: 3px solid white;
  }

  &.live {
    border: 3px solid red;
    .text {
      border-right: 3px solid red;
      background: red;
      color: white;
    }
  }
}

#micMeter {
  background: black;
  max-height: 40px;
  text-align: center;
  canvas {
    max-width: 100%;
  }
}

#track-hover-tooltip {
  padding: 1rem 2rem;
  min-width: 300px;
  font-size: 1em;
  hr {
    margin: 0.6rem 0.4rem 0.6rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.5);

    &:last-of-type {
      display: none;
    }
  }
}

.react-contexify__item__content svg {
  margin: 4px 0.6em 0 0;
}

// Because react tooltip and empty show plans get very broken.
.__react_component_tooltip {
    color: #fff;
    background: #222;
    border: 1px solid transparent;

  	&.place-top {
        margin-top: -10px;
    }
    &.place-top::before {
        border-top: 8px solid transparent;
    }
    &.place-top::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        bottom: -6px;
        left: 50%;
        margin-left: -8px;
        border-top-color: #222;
        border-top-style: solid;
        border-top-width: 6px;
    }

    &.place-bottom {
        margin-top: 10px;
    }
    &.place-bottom::before {
        border-bottom: 8px solid transparent;
    }
    &.place-bottom::after {
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        top: -6px;
        left: 50%;
        margin-left: -8px;
        border-bottom-color: #222;
        border-bottom-style: solid;
        border-bottom-width: 6px;
    }

    &.place-left {
        margin-left: -10px;
    }
    &.place-left::before {
        border-left: 8px solid transparent;
    }
    &.place-left::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        right: -6px;
        top: 50%;
        margin-top: -4px;
        border-left-color: #222;
        border-left-style: solid;
        border-left-width: 6px;
    }

    &.place-right {
        margin-left: 10px;
    }
    &.place-right::before {
        border-right: 8px solid transparent;
    }
    &.place-right::after {
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        left: -6px;
        top: 50%;
        margin-top: -4px;
        border-right-color: #222;
        border-right-style: solid;
        border-right-width: 6px;
    }
}
